import universidad.*
import profesionales.*
import empresa.*
import solicitante.*
describe "Test Empresa"{
	const sanMartin = new Universidad(provincia="Buenos Aires", honorariosRecomendados=3500)
	const rosario = new Universidad(provincia="Santa Fe", honorariosRecomendados=2800)
	const corrientes = new Universidad(provincia="Corrientes", honorariosRecomendados=4200)
	const hurlingham = new Universidad(provincia="Buenos Aires", honorariosRecomendados=84000)
		
	const juana= new Vinculado(universidad=rosario)
	const melina = new Asociado(universidad=corrientes)
	const rocio = new Libres(universidad=hurlingham, honorarios=5000, puedeTrabajar=#{"Santa Fe","Coroba","Buenos Aires"})
	const luciana = new Libres(universidad=rosario, honorarios=3200, puedeTrabajar=#{"Santa Fe", "Entre Rios"})
	
	const emp1 = new Empresa(honorariosDeReferencia=3500,profesionales=#{juana, melina, rocio, luciana})
	
	const gerardo = new Persona(provinciaDondeVive="Corrientes")
	const muni1 = new Institucion(universidadesQueReconoce=#{rosario, hurlingham})
	const muni2 = new Institucion(universidadesQueReconoce=#{sanMartin})
	
	test "Cuantos estudiaron en Rosario"{
		assert.equals(2, emp1.cuantosEstudiaronEn(rosario))
	}
	test "Cuantos estudiaron en Hurlingham"{
		assert.equals(1, emp1.cuantosEstudiaronEn(hurlingham))
	}
	test "Cuantos estudiaron en San Martin"{
		assert.equals(0, emp1.cuantosEstudiaronEn(sanMartin))
	}
	test "profesionales Caros es Rocio" {
		assert.equals(#{rocio}, emp1.profesionalesCaros())
	}
	test "universidades formadoras"{
		assert.equals(#{rosario, corrientes, hurlingham}, emp1.universidadesFormadoras())
	}
	test "universidades formadoras con size"{
		assert.equals(3, emp1.universidadesFormadoras().size())
	}
	test "universidades formadoras con contains"{
		assert.that(emp1.universidadesFormadoras().contains(rosario))
	}
	test "profesionales mas baratos"{
		assert.equals(juana, emp1.profesionalMasBarato())
	}
	test "es de gente acotada"{
		assert.that(emp1.esDeGenteAcotada())
	}
	test "gerardo puede ser atendido por melina"{
		assert.that(gerardo.puedeSerAtendido(melina))
	}
	test "gerardo no puede ser atendido por juliana"{
		assert.notThat(gerardo.puedeSerAtendido(juana))
	}
	test "emp1 puede atender a gerardo"{
		assert.that(emp1.puedeSatisfacer(gerardo))
	}
	test "emp1 puede atender a muni1"{
		assert.that(emp1.puedeSatisfacer(muni1))
	}
	test "emp1 no puede atender a muni2"{
		assert.notThat(emp1.puedeSatisfacer(muni2))
	}
	test "emp1 puede atender ah gerardo"{
		assert.notThat(emp1.puedeSatisfacer(muni2))
	}
}
